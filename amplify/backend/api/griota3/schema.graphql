input AMPLIFY {
  globalAuthRule: AuthRule = {allow: public}
} # FOR TESTING ONLY!
type Division @model {
  id: ID!
  name: String
  district: String
  chairman: String
  chairmanPhoneNumber: String
  viceChairman: String
  viceChairmanPhoneNumber: String
  stageGroups: [StageGroup] @hasMany
}

type LoanOffers @model {
  id: ID!
  loanAmount: Float
  loanDurationDays: Int
  instalment: Float
}

type StageGroup @model {
  id: ID!
  name: String
  division: Division @belongsTo
  stages: [Stage] @hasMany
}

type Stage @model {
  id: ID!
  name: String
  address: String
  chairman: String
  chairmanPhoneNumber: String
  viceChairman: String
  viceChairmanPhoneNumber: String
  stageGroup: StageGroup @belongsTo
  bodas: [Boda] @hasMany
}

type Boda @model {
  id: ID!
  firstname: String
  othername: String
  phoneNumber: String
  mobileMoneyName: String
  stageIdNumber: String
  nationalIdNumber: String
  picOfStageId: String
  picOfNationalId: String
  pin: String
  applications: [Application] @hasMany
  loans: [Loan] @hasMany
  stage: Stage @belongsTo
  type: String
  creditRank: String
  points: Float
}
type Application @model {
  id: ID!
  boda: Boda @belongsTo
  date: String
  status: String
  loanAmount: Int
  loanInstalment: Int
  loanDurationDays: Int
}
type Loan @model {
  id: ID!
  principal: Float
  boda: Boda @belongsTo
  startDate: String
  duration: Int
  loanType: String
  interestRate: Float
  payments: [Payment] @hasMany
  status: String
}
type Payment @model {
  id: ID!
  loan: Loan @belongsTo
  paymentAmount: Float
  paymentDate: String
  method: String
  account: [Account] @manyToMany(relationName: "PaymentAccount")
}
type Account @model {
  id: ID!
  name: String
  payments: [Payment] @manyToMany(relationName: "PaymentAccount")
  openingBalance: Float
}
type Adminstrator @model {
  id: ID!
  phoneNumber: String
  firstName: String
  otherName: String
  level: Int
  pin: String
}
type Commitment @model {
  id: ID!
  statement: String
}
